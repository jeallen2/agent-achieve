trigger:
- Dev

pool:
  vmImage: 'windows-latest'

variables:
  solutionPath: '**/*.sln'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: NuGetAuthenticate@1
  inputs:
    nuGetServiceConnections: 'telerik'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: '$(solutionPath)'
    feedsToUse: 'config'
    nugetConfigPath: 'AgentAchieve/NuGet.config'
    externalFeedCredentials: 'telerik'

- task: DotNetCoreCLI@2
  displayName: 'Build Debug'
  inputs:
    command: 'build'
    projects: '$(solutionPath)'
    arguments: '--configuration Debug --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests & Collect Code Coverage'
  inputs:
    command: 'test'
    projects: '**/*Test*.csproj'
    arguments: '--configuration Debug --no-build --collect "Code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura --logger "trx;LogFileName=test_results.trx"'
    publishTestResults: true

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/test_results.trx'
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: 'Build Release'
  inputs:
    command: 'build'
    projects: '$(solutionPath)'
    arguments: '--configuration Release --no-restore'

# - task: DotNetCoreCLI@2
#   displayName: 'Publish'
#   inputs:
#     command: 'publish'
#     publishWebProjects: true
#     arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
#     zipAfterPublish: true

# - task: DownloadSecureFile@1
#   name: publishProfile
#   inputs:
#     secureFile: 'AgentAchieveDevZip.PublishSettings' 

# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'PublishProfile'
#     PublishProfilePath: '$(publishProfile.secureFilePath)'
#     PublishProfilePassword: '$(azurepublishpassword)'
#     Package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
#     appType: 'webApp'
#     DeploymentType: zipDeploy
  